# name: foodgram_workflow

# on:
#   push:
#     branches: [ master ]

# jobs:
#   copy_infra_to_server:
#     name: Copy docker-compose.yml and nginx.conf
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Create projects directory
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.HOST }}
#         username: ${{ secrets.USER }}
#         key: ${{ secrets.SSH_KEY }}
#         passphrase: ${{ secrets.PASSPHRASE }}
#         script: |
#           sudo rm -rf foodgram/
#           mkdir -p foodgram/

#     - name: Copy files
#       uses: garygrossgarten/github-action-scp@release
#       with:
#           local: infra/
#           remote: /home/${{ secrets.USER }}/foodgram/
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           privateKey: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}

#   build_and_push_to_docker_hub:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Push to Docker Hub Backend
#         uses: docker/build-push-action@v2
#         with:
#           context: backend/
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

#       - name: Push to Docker Hub Frontend
#         uses: docker/build-push-action@v2
#         with:
#           context: frontend/
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: [
#       copy_infra_to_server,
#       build_and_push_to_docker_hub
#     ]
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           stack_file_name: docker-compose.yml
#           script: |
#             cd foodgram/
#             sudo fuser -k 80/tcp
#             touch .env
#             echo DEBUG=${{ secrets.DEBUG }} >> .env
#             echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
#             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
    
#             sudo docker-compose stop
#             sudo docker rm foodgram_frontend_1
#             sudo docker rm foodgram_backend_1
#             sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/frontend
#             sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
#             sudo docker-compose up -d
#             sudo docker-compose exec -T backend python manage.py makemigrations --noinput
#             sudo docker-compose exec -T backend python manage.py migrate --noinput
#             sudo docker-compose exec -T backend python manage.py collectstatic --no-input

name: foodgram_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt
    # - name: Test with flake8
    #   run: |
    #     python -m flake8 backend

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend/
          file: backend/Dockerfile
          tags: buddaru/backend:v1

      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend/
          file: frontend/Dockerfile
          tags: buddaru/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yaml
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker pull buddaru/backend:v1
            sudo docker pull buddaru/frontend:latest
            touch infra/.env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d

#   # send_message:
#   #   name: Send telegram message
#   #   runs-on: ubuntu-latest
#   #   needs: deploy
#   #   steps:
#   #   - name: send message
#   #     uses: appleboy/telegram-action@master
#   #     with:
#   #       to: ${{ secrets.TELEGRAM_TO }}
#   #       token: ${{ secrets.TELEGRAM_TOKEN }}
#   #       message: ${{ github.workflow }} успешно выполнен!